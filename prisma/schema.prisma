generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id        Int       @id @default(autoincrement())
  email     String    @unique
  password  String
  firstName String
  lastName  String
  avatar    String?
  role      Role      @default(EMPLOYEE)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  assignedIssues Issue[] @relation("AssignedTo") 
  reportedIssues Issue[] @relation("ReportedBy") 
}

enum Role {
  EMPLOYEE
  MANAGER
  ADMIN
}

model Issue {
  id          Int           @id @default(autoincrement())
  title       String
  description String?
  type        IssueType     @default(FEATURE)
  status      IssueStatus   @default(BACKLOG)
  priority    IssuePriority @default(MEDIUM)
  assignedToId Int?          
  assignedTo  User?         @relation("AssignedTo", fields: [assignedToId], references: [id])
  reportedById Int           
  reportedBy  User          @relation("ReportedBy", fields: [reportedById], references: [id])  
  completedAt DateTime?
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  tags        String[]
}

enum IssueType {
  BUG
  FEATURE
  ENHANCEMENT
  DOCUMENTATION
  OTHER
}

enum IssueStatus {
  BACKLOG
  TO_DO
  IN_PROGRESS
  CODE_REVIEW
  COMPLETED
  CANCELED
}

enum IssuePriority {
  MINOR
  LOWEST
  LOW
  MEDIUM
  HIGH
  HIGHEST
  CRITICAL
}